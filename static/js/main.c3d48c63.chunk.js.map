{"version":3,"sources":["Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","API_KEY.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js","assets/noPoster.png"],"names":["Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","OverView","p","Production","ProductTitle","ProductContainer","ProductItem","PCImg","img","PCName","SeasonImg","Youtube","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","imdb_id","href","rel","src","width","alt","overview","production_companies","company","logo_path","production_countries","country","seasons","season","videos","type","height","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c3d48c63.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0%;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  padding: 0px 10px;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 50px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? '#3498db' : 'transparent')};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n  margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      Loading...\n    </span>\n  </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.15s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require('../assets/noPoster.png')\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 15 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Broukflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\nimport { API_KEY } from './API_KEY';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get('movie/now_playing'),\n  upcoming: () => api.get('movie/upcoming'),\n  popular: () => api.get('movie/popular'),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/movie', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get('tv/top_rated'),\n  popular: () => api.get('tv/popular'),\n  airingToday: () => api.get('tv/airing_today'),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: 'videos',\n      },\n    }),\n  search: term =>\n    api.get('search/tv', {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n};\n","export const API_KEY = 'a734eb2383d5544e823552fba3ba0d59';\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming },\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movies information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV shows | Broukflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Toady\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n    );\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TVs information\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from 'Components/Message';\nimport Poster from 'Components/Poster';\nimport Helmet from 'react-helmet';\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  airingToday,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Broukflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {movieResults &&\n          tvResults &&\n          movieResults.length === 0 &&\n          tvResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a6a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, tvApi } from 'api';\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: '',\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== '') {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n      this.setState({ loading: true });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Loader from 'Components/Loader';\nimport Helmet from 'react-helmet';\nimport { groupPatternsByBaseDirectory } from 'fast-glob/out/managers/tasks';\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  margin: 20px 0;\n  flex-direction: row;\n`;\n\nconst Item = styled.div``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst OverView = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst Production = styled.div`\n  margin: 20px 0px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst ProductTitle = styled.p`\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nconst ProductContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ProductItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  border-radius: 10px;\n  border: 1px solid white;\n  margin-right: 5px;\n`;\n\nconst PCImg = styled.img`\n  width: 40px;\n  height: 40px;\n  background-color: white;\n  padding: 2px;\n  border-radius: 10px;\n`;\n\nconst PCName = styled.span`\n  font-size: 12px;\n  opacity: 0.7;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n\nconst SeasonImg = styled.img`\n  width: 70px;\n  height: 110px;\n  margin-right: 5px;\n`;\n\nconst Youtube = styled.p`\n  font-size: 32px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>\n          {result.original_title ? result.original_title : result.original_name}{' '}\n          | Broukflix\n        </title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require('../../assets/noPoster.png')\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            {(result.runtime || result.episode_run_time) && (\n              <>\n                <Divider>·</Divider>\n                <Item>\n                  {result.runtime ? result.runtime : result.episode_run_time[0]}\n                  min\n                </Item>\n              </>\n            )}\n            <Divider>·</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `,\n                )}\n            </Item>\n            {result.imdb_id && (\n              <>\n                <Divider>·</Divider>\n                <Item>\n                  <a\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <img\n                      src=\"https://m.media-amazon.com/images/G/01/imdb/images/desktop-favicon-2165806970._CB484110913_.ico\"\n                      width=\"15px\"\n                      alt=\"imdb_ico\"\n                    />\n                  </a>\n                </Item>\n              </>\n            )}\n          </ItemContainer>\n          <OverView>{result.overview}</OverView>\n          {result.production_companies && (\n            <Production>\n              <ProductTitle>Production Companies</ProductTitle>\n              <ProductContainer>\n                {result.production_companies.map(company => (\n                  <ProductItem>\n                    {company.logo_path && (\n                      <PCImg\n                        src={`https://image.tmdb.org/t/p/w500${company.logo_path}`}\n                      />\n                    )}\n                    <PCName>{company.name}</PCName>\n                  </ProductItem>\n                ))}\n              </ProductContainer>\n            </Production>\n          )}\n          {result.production_countries && (\n            <Production>\n              <ProductTitle>Production Countries</ProductTitle>\n              <ProductContainer>\n                {result.production_countries.map(country => (\n                  <PCName>{country.name}</PCName>\n                ))}\n              </ProductContainer>\n            </Production>\n          )}\n          {result.seasons && (\n            <>\n              <ProductTitle>Season</ProductTitle>\n              <ProductContainer>\n                {result.seasons.map(\n                  season =>\n                    season.poster_path && (\n                      <SeasonImg\n                        src={`https://image.tmdb.org/t/p/w500${season.poster_path}`}\n                      />\n                    ),\n                )}\n              </ProductContainer>\n            </>\n          )}\n          {result.videos.results && (\n            <>\n              <Youtube>Youtube</Youtube>\n              <iframe\n                title={result.id}\n                id=\"ytplayer\"\n                type=\"text/html\"\n                width=\"480\"\n                height=\"270\"\n                src={`http://www.youtube.com/embed/${result.videos.results[0].key}`}\n              />\n            </>\n          )}\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, tvApi } from '../../api';\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes('/movie/'),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push('/');\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      this.setState({ result });\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\nimport Header from 'Components/Header';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" exact component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration: none;\n        color: inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from 'Components/GlobalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/noPoster.151130cc.png\";"],"sourceRoot":""}